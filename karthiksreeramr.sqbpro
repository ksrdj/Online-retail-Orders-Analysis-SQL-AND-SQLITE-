<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="D:/downloads/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2528"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT P.PRODUCT_CLASS_CODE, P.PRODUCT_ID, P.PRODUCT_DESC,
	CASE P.PRODUCT_CLASS_CODE
		WHEN 2050 THEN P.product_price + 2000
		WHEN 2051 THEN P.product_price + 500
		WHEN 2052 THEN P.product_price + 600
	ELSE P.PRODUCT_PRICE
END PRODUCT_PRICE
FROM PRODUCT P
INNER JOIN PRODUCT_CLASS PC
ON P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE
ORDER BY P.PRODUCT_CLASS_CODE desc;

</sql><sql name="SQL 2">SELECT PC.PRODUCT_CLASS_DESC, P.PRODUCT_ID, P.PRODUCT_DESC, P.PRODUCT_QUANTITY_AVAIL,
CASE
    WHEN P.PRODUCT_CLASS_CODE in (2050,2053) THEN
       CASE 
	     WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
         WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=10 THEN 'Low stock'
         WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=11 and P.PRODUCT_QUANTITY_AVAIL &lt;=30) THEN 'In stock'
         WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=31 THEN 'Enough stock'
       END
    WHEN P.PRODUCT_CLASS_CODE in (2052,2056) THEN
     CASE
        WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
        WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=20 THEN 'Low stock'
        WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=21 and P.PRODUCT_QUANTITY_AVAIL &lt;=80) THEN 'In stock'
        WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=81 THEN 'Enough stock'
       END
       ELSE 
              CASE
                WHEN P.PRODUCT_QUANTITY_AVAIL =0 THEN 'Out of stock'
				WHEN P.PRODUCT_QUANTITY_AVAIL &lt;=15 THEN 'Low stock'
				WHEN (P.PRODUCT_QUANTITY_AVAIL &gt;=16 and P.PRODUCT_QUANTITY_AVAIL &lt;=50) THEN 'In stock'
				WHEN P.PRODUCT_QUANTITY_AVAIL &gt;=51 THEN 'Enough stock'
		END
END INVENTORY_STATUS
FROM PRODUCT P 
INNER JOIN PRODUCT_CLASS PC ON P.PRODUCT_CLASS_CODE =
PC.PRODUCT_CLASS_CODE
ORDER BY P.PRODUCT_CLASS_CODE desc;





</sql><sql name="SQL 3">SELECT COUNT(CITY) COUNT_OF_CITIES, COUNTRY
FROM ADDRESS
GROUP BY COUNTRY
HAVING COUNTRY NOT IN ('USA','Malaysia') AND COUNT(CITY) &gt; 1
ORDER BY COUNT(CITY) DESC</sql><sql name="SQL 4">SELECT OC.CUSTOMER_ID, (OC.CUSTOMER_FNAME ||' '|| OC.CUSTOMER_LNAME) AS CUSTOMER_FULL_NAME, A.CITY, A.PINCODE, O.ORDER_ID,O.ORDER_DATE, PC.PRODUCT_CLASS_DESC, P.PRODUCT_DESC,(OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS SUBTOTAL
FROM ONLINE_CUSTOMER OC
INNER JOIN ADDRESS A ON OC.ADDRESS_ID = A.ADDRESS_ID
LEFT JOIN
(
SELECT CUSTOMER_ID, MAX(ORDER_ID) AS ORDER_ID,ORDER_DATE
FROM ORDER_HEADER
GROUP BY CUSTOMER_ID
) O ON OC.CUSTOMER_ID = O.CUSTOMER_ID
LEFT JOIN
(
SELECT ORDER_ID,SUM(PRODUCT_QUANTITY) AS PRODUCT_QUANTITY, PRODUCT_ID
FROM ORDER_ITEMS
GROUP BY ORDER_ID
) OI ON O.ORDER_ID = OI.ORDER_ID
LEFT JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
LEFT JOIN PRODUCT_CLASS PC ON P.PRODUCT_CLASS_CODE =
PC.PRODUCT_CLASS_CODE
WHERE CAST(A.PINCODE AS INTEGER) &gt; 0
ORDER BY OC.CUSTOMER_FNAME, O.ORDER_DATE, SUBTOTAL</sql><sql name="SQL 5">SELECT OI.PRODUCT_ID, P.PRODUCT_DESC, SUM(OI.PRODUCT_QUANTITY) AS TOTAL_QUANTITY
FROM ORDER_ITEMS OI
LEFT JOIN PRODUCT P ON OI.PRODUCT_ID = P.PRODUCT_ID
LEFT JOIN PRODUCT_CLASS PC ON P.PRODUCT_CLASS_CODE =
PC.PRODUCT_CLASS_CODE
WHERE OI.PRODUCT_ID in
(
SELECT MAX(PRODUCT_ID) as PRODUCT_ID
FROM ORDER_ITEMS B
WHERE ORDER_ID IN
(
SELECT DISTINCT
ORDER_ID
FROM
ORDER_ITEMS A
WHERE
PRODUCT_ID = 201
)
GROUP BY B.ORDER_ID
ORDER BY COUNT(B.PRODUCT_ID) DESC
LIMIT 1
)</sql><sql name="SQL 6">SELECT OC.CUSTOMER_ID, (OC.CUSTOMER_FNAME ||' '|| OC.CUSTOMER_LNAME) AS CUSTOMER_FULL_NAME, OC.CUSTOMER_EMAIL, O.ORDER_ID,P.PRODUCT_DESC, OI.PRODUCT_QUANTITY,(OI.PRODUCT_QUANTITY*P.PRODUCT_PRICE) AS SUBTOTAL
FROM ONLINE_CUSTOMER OC
INNER JOIN ADDRESS A ON OC.ADDRESS_ID = A.ADDRESS_ID
LEFT JOIN ORDER_HEADER O ON OC.CUSTOMER_ID =
O.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS OI ON O.ORDER_ID =
OI.ORDER_ID
LEFT JOIN PRODUCT P ON OI.PRODUCT_ID =
P.PRODUCT_ID
LEFT JOIN PRODUCT_CLASS PC ON
P.PRODUCT_CLASS_CODE = PC.PRODUCT_CLASS_CODE</sql><current_tab id="5"/></tab_sql></sqlb_project>
